import { AddressResponse } from "../types";
import { OptionalStringMap } from "../util";
import { Client } from "../client";
import { HttpResponse } from "../agent";
/**
 * Query
 */
export interface Query extends OptionalStringMap {
    api_key?: string;
    licensee?: string;
    filter?: string;
    page?: string;
    limit?: string;
    tags?: string;
    postcode?: string;
    postcode_outward?: string;
    post_town?: string;
    dependant_locality?: string;
    organisation_name?: string;
    thoroughfare?: string;
    dependant_thoroughfare?: string;
    building_name?: string;
    building_number?: string;
    sub_building_name?: string;
    district?: string;
    ward?: string;
    postcode_type?: string;
    su_organisation_indicator?: string;
    country?: string;
    box?: string;
}
interface Header extends OptionalStringMap {
    Authorization?: string;
    "IDPC-Source-IP"?: string;
}
export interface Request {
    query?: Query;
    header?: Header;
    timeout?: number;
}
export interface Response extends HttpResponse {
    body: AddressResponse;
}
export interface List {
    (client: Client, request: Request): Promise<Response>;
}
export declare const list: List;
export {};
